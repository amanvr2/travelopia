/* root variables */
:root {
  --background-color: rgba(0, 0, 0, 0.6); /* Background color with alpha transparency */
  --text-color: #ffffff; /* Text color */
  --button-default-color: #e77552; /* Default button color */
  --header-footer-bg-color: #33140a; /* Background color for header and footer */
  --button-hover-color: #d16a4b; /* Button color on hover */
}

body {
  margin: 0;
  padding: 0;
  font-family: 'Roboto', sans-serif;
  background-color: var(--background-color); /* Set background color using root variable */
  color: var(--text-color); /* Set text color using root variable */
}

.container {
  position: relative;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

.container > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.overlay {
  position: absolute;
  display: flex;
  flex-flow: column;
  gap: 20px;
  text-align: center;
  justify-content: center;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: 2; /* Ensure overlay appears above other content */
  background-color: var(--background-color); /* Set background color using root variable */
}

.notification {
  position: absolute;
  top: 2%;
  color: var(--text-color); /* Set text color using root variable */
  left: -50%;
  right: -50%;
  margin: 0 auto;
  z-index: 100;
  width: 300px;
  border-radius: 8px;
  padding: 20px;
  background-color: var(--button-default-color); /* Set background color using root variable */
  opacity: 0;
  transition: opacity 0.3s ease-in-out; /* Add a transition effect for opacity */
}

.notification.show {
  opacity: 1; /* Show the notification */
}

.overlay > .content {
  color: var(--text-color); /* Set text color using root variable */
  font-weight: bold;
}

.overlay > .content > .alert-btn {
  min-height: 50px;
  min-width: 150px;
  padding: 12px 20px;
  border-radius: 25px;
  border: none;
  background-color: var(--button-default-color); /* Set background color using root variable */
  color: var(--text-color); /* Set text color using root variable */
  cursor: pointer;
  font-size: 18px;
  font-weight: bold;
  transition: background-color 0.5s ease;
}

.overlay > .content > .alert-btn:hover {
  background-color: var(--button-hover-color); /* Change button color on hover using root variable */
  border-color: var(--button-hover-color); /* Change button border color on hover using root variable */
}

.close-btn {
  background: none;
  border: none;
  color: var(--text-color); /* Set text color using root variable */
  cursor: pointer;
  font-size: 15px;
  align-self: flex-start;
  top: 5px;
  right: 0;
  position: inherit;
}

.overlay > .content > .alert-btn:hover {
  background-color: var(--button-hover-color); /* Change button color on hover using root variable */
}

header.sticky {
  position: fixed;
  top: 0;
  min-height: 50px;
  padding: 20px 0;
  text-align: center;
  background-color: var(--header-footer-bg-color); /* Set background color using root variable */
  z-index: 5;
  width: 100%;
}

.header-content {
  margin: 0 auto;
  display: flex;
  padding: 20px;
  justify-content: space-between;
  align-items: center;
}

.header-corner {
  font-size: 20px;
  margin: 0;
}

footer.sticky {
  position: fixed;
  bottom: 0;
  min-height: 50px;
  padding: 20px 0;
  text-align: center;
  background-color: var(--header-footer-bg-color); /* Set background color using root variable */
  z-index: 5;
  width: 100%;
  color: var(--text-color); /* Set text color using root variable */
}

/* Media Queries */
@media screen and (max-width: 768px) {
  .header-content {
    padding: 10px;
  }

  .header-corner {
    font-size: 16px;
  }

  .overlay > .content > .alert-btn {
    font-size: 14px;
  }
}

@media screen and (max-width: 480px) {
  .overlay > .content {
    font-size: 14px;
  }

  .notification {
    top: 5px;
  }
}